% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filter}
\alias{filter}
\alias{filter.smtrx}
\alias{filter.interact}
\alias{filter.ego}
\title{Filter days or list of badges}
\usage{
filter(x, ...)

\method{filter}{smtrx}(x, ...)

\method{filter}{interact}(x, ...)

\method{filter}{ego}(x, ...)
}
\arguments{
\item{x}{A data frame with sociometric data, either interaction, audio, or accelerometer data}

\item{...}{Additional filtering conditions passed on to \code{dplyr::filter}. These conditions evalute
to logical \code{TRUE|FALSE},}

\item{days}{Vector of date strings specifying one or several days to filter for.}

\item{ids}{Vector of badge IDs to retain in data frame.}

\item{ids.strict}{Logical. If \code{TRUE} only dyads where both nodes are simultaneously listed in
\code{ids} will be retained. If \code{ids.strict=FALSE} (default) either nodes is sufficient.}
}
\value{
Original object of class sociometrics.
}
\description{
Utility wrapper around \code{dplyr::filter} to easily extract rows per "days" and/or
 a list of badge ids.

 Filtering rows per single days requires conversion of timestamp data to single
 day datum; similar, for interaction data, filtering for a list of badges requires scanning both
 Badge.ID and Other.ID columns. Using the ellipsis operator \code{...} other filter conditions
 will be passed on to \code{dplyr::filter}.

 NOTE: the type of arguments accepted by this function combines normal parameter assignments such
 as for example \code{filter( ids=c("34") )} with dplyr conditionals that evaluate to logical
 TRUE or FALSE \code{filter(Timestamp > "2018-12-12 23:23:23")}. Overall, \code{sociometrics::filter()}
 accepts three additional parameters: \code{days}, \code{ids}, and \code{ids.strict} (see parameters).
}
\section{Methods (by class)}{
\itemize{
\item \code{smtrx}: Filter dataframe of class "smtrx" with by days.

\item \code{interact}: interaction data frame containing Badge.ID and Other.ID columns.

\item \code{ego}: Filter data frames of class "ego" with column Badge.ID
}}

\examples{
data("smtrx")

#get all detects involving badge 3119 or 3180 with RSSI stronger than -75
filter(df.interact, ids=c("3119", "3180"), RSSI > -75)

#get all detects involving 3119 and 3180 only
filter(df.interact, ids=c("3119", "3180"), ids.strict=T)

#get badges 3186 or 3119 between specified moments in time
filter(df.interact, ids=c("3186", "3119"), Timestamp > "2016-01-18 10:44:45" & Timestamp <  "2016-01-18 10:45:00")

}
